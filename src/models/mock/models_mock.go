// Code generated by MockGen. DO NOT EDIT.
// Source: ./src/models/challenge.go

package mock_models

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockChallengeRepository is a mock of ChallengeRepository interface
type MockChallengeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockChallengeRepositoryMockRecorder
}

// MockChallengeRepositoryMockRecorder is the mock recorder for MockChallengeRepository
type MockChallengeRepositoryMockRecorder struct {
	mock *MockChallengeRepository
}

// NewMockChallengeRepository creates a new mock instance
func NewMockChallengeRepository(ctrl *gomock.Controller) *MockChallengeRepository {
	mock := &MockChallengeRepository{ctrl: ctrl}
	mock.recorder = &MockChallengeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockChallengeRepository) EXPECT() *MockChallengeRepositoryMockRecorder {
	return _m.recorder
}

// Create mocks base method
func (_m *MockChallengeRepository) Create() error {
	ret := _m.ctrl.Call(_m, "Create")
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (_mr *MockChallengeRepositoryMockRecorder) Create() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Create", reflect.TypeOf((*MockChallengeRepository)(nil).Create))
}
